/* Importing Bootstrap SCSS file. */
@import '~bootstrap/scss/bootstrap';

:root {
  /* https://css-tricks.com/switch-font-color-for-different-backgrounds-with-css/ */
  /* theme color variables to use in RGB declarations */
  --base-red: 200;
  --base-green: 60;
  --base-blue: 255;
  /* the threshold at which colors are considered "light".
  Range: decimals from 0 to 1, recommended 0.5 - 0.6 */
  --threshold: 0.6;
  /* the threshold at which a darker border will be applied.
  Range: decimals from 0 to 1, recommended 0.8+ */
  --border-threshold: 0.8;
}

.btn-dynamic-colors {
  @extend .btn;

  /*sets the background for the base class*/
  background: rgb(var(--base-red), var(--base-green), var(--base-blue));

  /*
    Calcs perceived brightness using the
    sRGB Luma method
    lightness = (red * 0.2126 + green * 0.7152 + blue * 0.0722) / 255
    */
  --r: calc(var(--base-red) * 0.2126);
  --g: calc(var(--base-green) * 0.7152);
  --b: calc(var(--base-blue) * 0.0722);
  --sum: calc(var(--r) + var(--g) + var(--b));

  --perceived-lightness: calc(var(--sum) / 255);

  /*
    1) Any lightness value above the threshold will be considered "light", therefore apply a black text color. Any bellow will be considered dark, and use white color.
    This results from appying either a sub-zero (negative) or a higher-than-100 lightness value, which are capped to 0 and 100 respectively, to a HSL declaration
    */
  color: hsl(0, 0%, calc((var(--perceived-lightness) - var(--threshold)) * -10000000%)) !important;

  /*
    2) sets the border as a 50% darker shade of the base color, ONLY if background color luma is higher than the border threshold.
    To achieve this I use the same sub-zero or higher-than-max technique, only this time using the Alpha value from an RGBA declaration.
    This results in a border that's either fully transparent or fully opaque
    */
  --border-alpha: calc((var(--perceived-lightness) - var(--border-threshold)) * 100);
  border-color: rgba(calc(var(--base-red) - 50), calc(var(--base-green) - 50), calc(var(--base-blue) - 50), var(--border-alpha)) !important;
}

.btn--w3c{
  /* Alternative calc using the
    W3C luma method */
  --r: calc(var(--base-red) * 0.299);
  --g: calc(var(--base-green) * 0.587);
  --b: calc(var(--base-blue) * 0.114);
  --lightness: calc(red * 0.299 + green * 0.587 + blue * 0.114) / 255;
  --border-alpha: calc((var(--lightness) - var(--border-threshold)) * 100);
  background-color: rgba(calc(var(--base-red) - 50), calc(var(--base-green) - 50), calc(var(--base-blue) - 50), var(--border-alpha)) !important;
  border-color: rgba(calc(var(--base-red) - 50), calc(var(--base-green) - 50), calc(var(--base-blue) - 50), var(--border-alpha)) !important;
}

// .btn--secondary{
//   /* 3) sets the background color as a 60ยบ rotated hue */
//   filter: hue-rotate(60deg);
// }
